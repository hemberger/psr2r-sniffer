<?xml version="1.0"?>
<ruleset name="PSR2R">
	<description>
		PSR2R Coding Standard.

		All sniffs in ./Sniffs will be auto loaded

		Documentation:
		https://github.com/squizlabs/PHP_CodeSniffer/wiki
	</description>

	<exclude-pattern>\.git</exclude-pattern>
	<exclude-pattern>\.xml</exclude-pattern>
	<exclude-pattern>\.css</exclude-pattern>
	<exclude-pattern>\.js</exclude-pattern>
	<exclude-pattern>\.yml</exclude-pattern>
	<exclude-pattern>\.txt</exclude-pattern>
	<exclude-pattern>\.json</exclude-pattern>

	<config name="installed_paths" value="../../slevomat/coding-standard"/>
	<!--
	<config name="installed_paths" value="../../spryker/code-sniffer"/>
	-->

	<rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>
	<rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UnusedUses"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UseSpacing"/>

	<rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>

	<rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing"/>
	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>
	<rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue"/>
	<rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints"/>

	<rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility">
		<properties>
			<property name="fixable" type="bool" value="true"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.ControlStructures.NewWithParentheses"/>

	<rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation"/>

	<rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable"/>

	<rule ref="SlevomatCodingStandard.PHP.UselessSemicolon"/>
	<rule ref="SlevomatCodingStandard.PHP.ShortList"/>

	<rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference"/>
	<rule ref="SlevomatCodingStandard.Classes.UnusedPrivateElements"/>

	<rule ref="SlevomatCodingStandard.Exceptions.DeadCatch"/>

	<rule ref="SlevomatCodingStandard.Commenting.EmptyComment"/>
	<rule ref="SlevomatCodingStandard.Commenting.DisallowOneLinePropertyDocComment"/>

	<rule ref="SlevomatCodingStandard.ControlStructures.DisallowContinueWithoutIntegerOperandInSwitch"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing"/>

	<rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

	<rule ref="Squiz.Classes.LowercaseClassKeywords"/>

	<rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
	<rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
	<rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
	<rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
	<rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>


	<!--
	<rule ref="Squiz.Commenting.DocCommentAlignment"/>
	-->

	<rule ref="PEAR.ControlStructures.ControlSignature"/>

	<rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
	<rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
	<rule ref="Generic.ControlStructures.InlineControlStructure"/>

	<rule ref="Zend.Files.ClosingTag"/>
	<rule ref="Generic.Files.LineEndings"/>
	<rule ref="Generic.Files.ByteOrderMark"/>
	<rule ref="Generic.NamingConventions.UpperCaseConstantName"/>

	<rule ref="Generic.PHP.DisallowShortOpenTag"/>
	<rule ref="Generic.PHP.LowerCaseKeyword"/>
	<rule ref="SlevomatCodingStandard.PHP.TypeCast"/>
	<rule ref="Generic.PHP.LowerCaseType"/>

	<rule ref="Generic.WhiteSpace.IncrementDecrementSpacing"/>

	<rule ref="Generic.Formatting.DisallowMultipleStatements"/>

	<rule ref="Generic.Formatting.NoSpaceAfterCast"/>

	<rule ref="Squiz.Functions.FunctionDeclaration"/>
	<rule ref="PEAR.Functions.ValidDefaultValue"/>

	<rule ref="PSR1"/>
	<rule ref="PSR1.Files.SideEffects.FoundWithSymbols">
		<severity>0</severity>
	</rule>

	<rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
	<rule ref="PSR2.Namespaces.UseDeclaration"/>

	<rule ref="PSR2.Files.EndFileNewline"/>

	<!--
	<rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
	<rule ref="Squiz.Functions.MultiLineFunctionDeclaration"/>
	-->

	<rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>

	<rule ref="PSR12.Classes.ClassInstantiation"/>
	<rule ref="PSR12.Keywords.ShortFormTypeKeywords"/>
	<rule ref="PSR12.Namespaces.CompoundNamespaceDepth"/>
	<rule ref="PSR12.Operators.OperatorSpacing"/>
	<rule ref="PSR12.Functions.NullableTypeDeclaration"/>
	<rule ref="PSR12.Functions.ReturnTypeDeclaration"/>

	<rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>
	<rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>

	<rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
		<properties>
			<property name="equalsSpacing" value="1"/>
		</properties>
	</rule>

	<!-- needs https://github.com/squizlabs/PHP_CodeSniffer/issues/900 to be fixed first -->
	<rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint">
		<severity>0</severity>
	</rule>

	<rule ref="PEAR.Functions.ValidDefaultValue"/>

	<!--
	<rule ref="PSR2.Methods.FunctionCallSignature.SpaceAfterCloseBracket">
		<severity>0</severity>
	</rule>
	-->

	<rule ref="PEAR.NamingConventions.ValidClassName"/>

	<rule ref="Squiz.Operators.ValidLogicalOperators"/>

	<rule ref="Generic.PHP.DeprecatedFunctions">
		<properties>
			<property name="forbiddenFunctions" type="array">
				<element key="delete" value="unset"/>
				<element key="create_function" value="null"/>
				<element key="each" value="null"/>
			</property>
		</properties>
	</rule>

	<rule ref="Squiz.PHP.Eval"/>
	<rule ref="Generic.PHP.ForbiddenFunctions"/>
	<rule ref="Squiz.PHP.NonExecutableCode"/>
	<rule ref="Generic.PHP.NoSilencedErrors"/>
	<rule ref="Generic.PHP.LowerCaseConstant"/>

	<rule ref="Squiz.Scope.MemberVarScope"/>
	<rule ref="Squiz.Scope.MethodScope"/>
	<rule ref="Squiz.Scope.StaticThisUsage"/>

	<rule ref="Squiz.WhiteSpace.CastSpacing"/>
	<rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
	<rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
	<rule ref="Squiz.WhiteSpace.MemberVarSpacing"/>
	<rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

</ruleset>
